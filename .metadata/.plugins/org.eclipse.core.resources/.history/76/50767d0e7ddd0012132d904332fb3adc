package org.interface888.services;

import java.util.HashMap;
import java.util.Observable;
import java.util.Set;

import org.deviceservice.sensing.api.DeviceSensing;
import org.interface888.impl.Interface888;

import com.phidgets.InterfaceKitPhidget;
import com.phidgets.PhidgetException;


public class AmbientSense extends Observable implements DeviceSensing {
	
	
	HashMap<String,String> prop;
	private int changed = 1;
	InterfaceKitPhidget itk =  null;
	
	public AmbientSense(InterfaceKitPhidget interfaceph) {
		try {
			itk =  interfaceph;
			prop.put(Interface888.TOUCHNAME, new Integer(itk.getSensorValue(Interface888.TOUCH)).toString());
			prop.put(Interface888.TEMPERATURENAME, new Integer(itk.getSensorValue(Interface888.TEMPERATURE)).toString());
			prop.put(Interface888.PRECISIONLIGHTNAME, new Integer(itk.getSensorValue(Interface888.PRECISIONLIGHT)).toString());
			prop.put(Interface888.PRESENCENAME, new Integer(itk.getSensorValue(Interface888.PRESENCE)).toString());
			prop.put(Interface888.SLIDERNAME, new Integer(itk.getSensorValue(Interface888.SLIDER)).toString());
			prop.put(Interface888.ROTATIONNAME, new Integer(itk.getSensorValue(Interface888.ROTATION)).toString());
			prop.put(Interface888.VIBRATIONNAME, new Integer(itk.getSensorValue(Interface888.VIBRATION)).toString());
		} catch (PhidgetException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
/*		try {
			update(1,itk.getSensorValue(1));
			update(2,itk.getSensorValue(2));
			update(3,itk.getSensorValue(3));
			update(4,itk.getSensorValue(4));
			update(6,itk.getSensorValue(6));
			update(7,itk.getSensorValue(7));
		} catch (PhidgetException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} */
	}

	public void updateAmbient(int i, int sensorValue) {
		try {
			switch(i){
				
			case Interface888.TOUCH : 
				setValue("Touch",new Integer(sensorValue).toString());
				break;
			case Interface888.TEMPERATURE :
				setValue("Temperature",new Integer(sensorValue).toString());
				break;
			case Interface888.PRECISIONLIGHT : 
				setValue("PrecisionLight",new Integer(sensorValue).toString());
				break;
			case Interface888.PRESENCE : 
				setValue("Presence",new Integer(sensorValue).toString());
				break;
			case Interface888.SLIDER :
				setValue("Slider",new Integer(sensorValue).toString());
				break;
			//case 5 : 
		//		precisionLightSensor(index,sce);
	//			break;
			case Interface888.ROTATION : 
				setValue("Rotation",new Integer(sensorValue).toString());
				break;
			case Interface888.VIBRATION : 
				setValue("Vibration",new Integer(sensorValue).toString());
				break;
			default :  throw new PhidgetException(i, "Index not found in the swich options");
			}
		} catch (PhidgetException e) {
			e.printStackTrace();
		}
	}

	
	@Override
	public String getDescription() {
		return "Presence Service detects if is present";
	}

	@Override
	public String getName() {
		return "Presence";
	}

	@Override
	public HashMap<String, String> getCollection() {
		return prop;
	}

	@Override
	public Set<String> getProperties() {
		return prop.keySet();
	}

	@Override
	public String getValue(String s) {
		return prop.get(s);
	}

	@Override
	public void setValue(String s, String v) {
		changed = 1;
		prop.put(s, v);
		
	}

	@Override
	public void setChanged(int changed) {
		this.changed = changed;
	}

	@Override
	public int getChanged() {
		int rt =changed;
		changed=0;
		return rt;
	}
}